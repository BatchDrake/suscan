dnl File generated by Zed2Soft Project Manager for the Zed2Soft Science Environment
dnl Creation date: Fri Feb  3 19:41:40 2017

AC_PREREQ(2.65)

AC_INIT(suscan, 0.1)

AC_CONFIG_HEADERS(config.h)
AC_CONFIG_MACRO_DIR([m4])

AM_INIT_AUTOMAKE([1.11.1])

cflags_were_set=false
if test "${CFLAGS+set}" = set; then
  GLOBAL_CFLAGS=$CFLAGS
  CFLAGS=
  cflags_were_set=:
fi

AC_PROG_CC
AM_PROG_CC_C_O
AM_PROG_AS
GLIB_GSETTINGS
AC_PROG_LIBTOOL
AC_PROG_INSTALL
dnl the following needs to come after the expansion of AC_PROG_CC
if $cflags_were_set; then :; else
  GLOBAL_CFLAGS=$CFLAGS
  CFLAGS=
fi

AC_SUBST(AM_CFLAGS)

AC_C_INLINE

if test "$ac_cv_c_inline" != no ; then
  AC_DEFINE([HAVE_INLINE], [0], [This compiler supports inline functions])
  AC_DEFINE(HAVE_INLINE,1)
  AC_SUBST(HAVE_INLINE)
fi

AC_HEADER_TIME

dnl Checks for library functions.
AC_FUNC_ERROR_AT_LINE
AC_FUNC_FORK
AC_FUNC_MALLOC

GLOBAL_LDFLAGS="-lm -lpthread -ldl -export-dynamic -rdynamic"

dnl Macro snippets imported from dependency `sigutils'
PKG_CHECK_MODULES(sigutils, [sigutils >= 0.1], , [AC_MSG_ERROR([Couldn't find sigutils])])
AC_SUBST(sigutils_CFLAGS)
AC_SUBST(sigutils_LIBS)

PKG_CHECK_MODULES(fftw3, [fftw3 >= 3.0], , [AC_MSG_ERROR([Couldn't find libfftw3])])
AC_SUBST(fftw3_CFLAGS)
AC_SUBST(fftw3_LIBS)

PKG_CHECK_MODULES(sndfile, sndfile >= 1.0.2, , [AC_MSG_ERROR([Couldn't find libsndfile])])
AC_SUBST(sndfile_CFLAGS)
AC_SUBST(sndfile_LIBS)

PKG_CHECK_MODULES([asoundlib], [ alsa >= 1.0.25 ], , [AC_MSG_ERROR([Couldn't find ALSA libraries])])
AC_SUBST(asoundlib_CFLAGS)
AC_SUBST(asoundlib_LIBS)

PKG_CHECK_MODULES([gtk3], [ gtk+-3.0 >= 3.22 ], , [AC_MSG_ERROR([Couldn't find GTK3])])
AC_SUBST(gtk3_CFLAGS)
AC_SUBST(gtk3_LIBS)

PKG_CHECK_MODULES(bladeRF, [ libbladeRF >= 0.28 ], ac_cv_bladeRF=yes, ac_cv_bladeRF=no)

if test "$ac_cv_bladeRF" != no ; then
  AC_DEFINE([HAVE_BLADERF], [0], [Compiled with bladeRF support])
  AC_DEFINE(HAVE_BLADERF,1)
  AC_SUBST(HAVE_BLADERF)
fi

AC_SUBST(bladeRF_CFLAGS)
AC_SUBST(bladeRF_LIBS)
  
PKG_CHECK_MODULES(hackRF, [ libhackrf >= 0.4 ], ac_cv_hackrf=yes, ac_cv_hackrf=no)

if test "$ac_cv_hackrf" != no ; then
  AC_DEFINE([HAVE_HACKRF], [0], [Compiled with hackRF support])
  AC_DEFINE(HAVE_HACKRF,1)
  AC_SUBST(HAVE_HACKRF)
fi

AC_SUBST(hackRF_CFLAGS)
AC_SUBST(hackRF_LIBS)
  
dnl Macro snippets imported from dependency `util'
AC_SUBST(GLOBAL_CFLAGS)
AC_SUBST(GLOBAL_LDFLAGS)
AC_OUTPUT([
  Makefile
  src/Makefile
  util/Makefile
  codec/Makefile
  analyzer/Makefile
  gui/Makefile
])
